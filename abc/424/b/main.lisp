(let* ((n (read))
       (m (read))
       (k (read))
       (user-answer-list (make-array (list n m) :initial-element 0))
       (result (remove-if-not #'identity (loop for i from 1 to k
					       collect (destructuring-bind (a b)
							   (mapcar #'parse-integer (uiop:split-string (read-line) :separator " "))
							 (setf (aref user-answer-list (1- a) (1- b)) 1)
							 (when (every #'(lambda (x) (= x 1))
								      (loop for j from 0 to (1- m) collect (aref user-answer-list (1- a) j)))
							   a)
							 )
					       ))))
  (when (not (zerop (length result)))
    (format t "~{~a~^ ~}" result))
  )
;; 処理系ごとの離脱用のコード。これがないとエラーが出る
#+sbcl (sb-ext:exit)
#+ccl (ccl:quit)
#+ecl (ext:quit)
#-(or sbcl ccl ecl) (quit)
